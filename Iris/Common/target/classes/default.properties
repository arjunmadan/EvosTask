datasource.iris.testquery=INSERT INTO tier(tier) SELECT 1 FROM dual WHERE 1 = 2
datasource.iris.connections.web.max=50
datasource.iris.connections.workers.max=15
datasource.iris.connections.workers.increased.max=25
datasource.iris.connections.test.period.sec=30

datasource.orderHistory.connections.test.period.sec=30
datasource.orderHistory.testquery=SELECT 1
orderHistory.reclaimed.tns.insert.max.size=5000

datasource.network.connections.max=50
datasource.network.connections.test.period.sec=30

datasource.messaging.connections.max=50
datasource.messaging.connections.test.period.sec=30
datasource.messaging.migration.batch.size=50000
datasource.messaging.verification.batch.size=10000

datasource.tnhistory.recast.batch.size=1000
datasource.tnhistory.cleanup.batch.size=200

datasource.tga.testquery=SELECT 1
datasource.tga.connections.max=2
datasource.tga.connections.test.period.sec=30

datasource.billing.driver=net.sourceforge.jtds.jdbc.Driver
datasource.billing.hibernate.dialect=org.hibernate.dialect.SQLServerDialect
datasource.billing.connections.max=50
datasource.billing.connections.test.period.sec=30
datasource.billing.preferred.test.query=SELECT 1
datasource.billing.max.idle.time.excess.connections.sec=300
datasource.billing.unreturned.connection.timeout.sec=0

datasource.sms.legacy.connections.max=50
datasource.sms.legacy.connections.test.period.sec=30
datasource.sms.legacy.preferred.test.query=SELECT 1
datasource.sms.legacy.max.idle.time.excess.connections.sec=300

datasource.termServices.driver=com.mysql.jdbc.Driver
datasource.termServices.hibernate.dialect=org.hibernate.dialect.MySQLDialect
datasource.termServices.testOnBorrow=true

datasource.osr.connections.max=50
datasource.osr.connections.test.period.sec=30
datasource.osr.migration.batch.size=1000

datasource.order.archive.driver=com.mysql.jdbc.Driver

jdbc.where.in.size.max=1000
default.lock.timeout.seconds=10

rabbitmq.exchange=NMS
rabbitmq.deadletter.exchange=${rabbitmq.exchange}.DeadLetter
rabbitmq.response.timeout.sec=30
rabbitmq.message.payload.bytes.max=80000000

# number buffered messages EACH thread can have
messageListener.api.prefetchCount=5
messageListener.api.threads.min=5
messageListener.api.threads.max=10

messageListener.worker.prefetchCount=1
messageListener.worker.threads.min=${minWorkerThreads:2}
messageListener.worker.threads.max=${maxWorkerThreads:10}

sftp.enabled=true

# API request timeouts (in ms)
default.timeout=30000

# Billing worker
billing.tollFreeAccountsNotToBill=1|2|3

# Lidb
lidb.privateKey.file.path=${IRIS_CONFIG_DIRECTORY}/lidb.pvt.key
lidb.order.tns.limit=5000
lidb.max.orders.count=35000

# SMS Audit
netnumber.file.directory=auditdl
netnumber.temp.file.name=/tmp/iris/smsauditfile

# DLDA
dlda.order.tns.limit=5000

# E911
e911.order.tns.limit=500
e911.order.additional.address.limit=5000
e911.edit.additional.address.limit=5000
e911.delete.additional.address.limit=5000
e911.order.aeui.limit=5000
e911.edit.aeui.limit=5000
e911.delete.aeui.limit=5000

# TN Option Order
tnoption.order.tns.limit=5000

# Order Notes properties
history.order.note.description.length.limit=500

# Notification
notification.workerName=notificationWorker
notification.workerPort=1244
notification.queueName=notificationQueue
notification.orderupdate.email.reply.cutline=*** Replies above this line
notification.orderupdate.email.smtp.host=${mailserver.host}
notification.orderupdate.email.smtp.port=${mailserver.port}
notification.callback.default.expiry.seconds=86400
notification.callback.retry.count=0
notification.callback.retry.interval=300000
notification.order.digest.event.limit=10000
notification.system.event.digest.limit=${notification.order.digest.event.limit}
notification.poll.email.message.core.pool.size=1
subject.order=$orderType order $!event.CustomerOrderIdAttribute#if($!event.PonAttribute) $!event.PonAttribute $!event.PonVersionAttribute#end has been changed to status $event.OrderStatus
subject.note=Note has been added
system.event.validate.email=@bandwidth.com
coverage.error.message.max.tns=100
system.event.large.disconnect.tns.size=1000
system.event.submit.interval.seconds=900

# Ordering
order.dbconnectiontimeout=600
order.rateCenterListSize=50
order.invalidAccountIdErrorMessage=The accountId in the order is not valid.
order.exceededMaxTnsErrorMessage=The quantity of telephone numbers requested has exceeded the max limit for an order.
order.invalidInputTnListErrorMessage=The input list of telephone numbers is null or empty.
order.invalidTnErrorMessage=The telephone number is not valid for ordering.
order.zeroValidTnErrorMessage=The total number of valid telephone numbers in the input list is zero.
order.systemErrorMessage=The ordering of telephone number(s) failed due to system error.
order.invalidOrderQtyErrorMessage=The quantity specified in the order is not valid or exceeds the maximum value of ${order.maxTnsInQtyOrder}.
order.accountLockedErrorMessage=The account is locked, please contact the inetwork support staff.
# The startNumber and endNumber will be set differently per JVM instance with no overlap
# The startNumber is the first order number to be used
order.numbergenerator.startNumber=1
# The endNumber is the last order number to be used, before rollover occurs
order.numbergenerator.endNumber=1000000
# File used to save the next order number to be used in case of a JVM crash
# The recovery file name should be set differently per JVM instance
order.numbergenerator.recoveryFile=${sys:user.home}/OrderIDRecoveryFile.txt
# Advance the recovery start number value as a safety precaution
order.numbergenerator.recoveryOffset=1000
invalidAccountIdErrorMessage=The account id is invalid.
accountLockedErrorMessage=The account is locked, please contact the inetwork support staff.

# LSR
lsr.order.tns.limit=1000
lsr.large.tn.count=100
lsr.min.days.for.large.tns=2
lsr.foc.date.delay.business.days=10
lsr.foc.date.for.pot=2030-01-13
portps.check.split.tns.size=500
pss.check.split.tns.size=5000

# LNP
internal.porting.allowed=true
on.demand.activation.allowed=true
allow.order.cancellation.in.exception.after.days=3
neustar.altspid.time.shift = 43200000
neustar.timezone=America/New_York
neustar.logs.path=/var/log/nms/api/neustar/
# Every day at 1 am
neustar.logs.clean.cron=0 0 1 * * *
neustar.logs.days.old=7
orderhistory.ohe.retrieval.limit=50000
default.porting.info.account=6555555

# On-Demand activation time bounds (24h format)
on.demand.earliest.possible.time=05:00
on.demand.beginning.business.time=08:00
on.demand.end.business.time=20:00
on.demand.latest.time=22:00
# Level3 On-Demand activation time bounds (24h format)
on.demand.level3.earliest.possible.time=06:00
on.demand.level3.beginning.business.time=04:00
on.demand.level3.end.business.time=16:00
on.demand.level3.latest.time=22:00
default.level3.foc.time=11:30
level3.service.foc-date-retrieval-error.days=5

default.internal.foc.time=11:30

neustar.altspidlrn.portps.failure.message=SPID information could not be obtained due to a network communication failure with the vendor. Please contact Bandwidth Support to verify that the AltSPID for the telephone numbers in this order should be updated or cleared.
neustar.altspidlrn.nonBWC.tn.message=The telephone numbers in this order are to be imported to Bandwidth CLEC. Please contact Bandwidth Support to verify that the AltSPID for the telephone numbers in this order should be updated or cleared.

lnp.status.check.use.legacy.history.worker=false
bandwidth.contactnumber=800-409-4357
bandwidth.spid=979E
level3.spid=8824
lnp.maxTnsForPortabilityCheck=5000
lnp.automated.port.tns.count.min=10
level3.lnp.automated.port.tns.count.max=49
lnp.bulk.portin.tns.count.max=20000

neustar.service.wireless.ebonded.foc.hours=24
neustar.service.wireless.non-ebonded.foc.days=5
neustar.service.foc-date-retrieval-error.days=10
neustar.service.supp.blackout.hours=180
neustar.portps.timeoutmillis=20000
neustar.customer.name=BWC
neustar.service.providername=BCJ
neustar.supplier.name=BWC
neustar.icp.failed.remark.pattern=[^a-zA-Z0-9 ]
neustar.triggered.pon.activation.enabled=true
portout.graceperiod.days=30
portout.customer.api.connection.timeout=30000
portout.customer.api.max.retry.count=8
portout.customer.api.max.retry.interval=300000
portout.customer.api.allow.on.unrecognized.error=true
port.out.wireless.interval.time.in.minutes=150
internal.port.out.completion.retry.interval.in.minutes=30
cancel.wireline.portin.immediately.after.requested.cancel=false
cancel.wireless.portin.immediately.after.requested.cancel=true
lnp.portin.minimal.manual.porting.interval.days=4
wireline.portout.reply.timeout=45

level3.cert.file.name=/LVL3_B2B_BANDWIDTH_CERT.pfx.bin
level3.cert.file.scheme=PKCS12
level3.productid=2036
level3.csn=3V-EL-MCL-8
level3.order.maxtns=50
level3.submit.notification.timeout.seconds=1200
level3.time.zone=MST

loa.directory.upload=/usr/local/nms/docs/loa
loa.directory.upload.check=true

# Turning Point TRAM API
cron.csr.nonrealtime.processing = 0 0 */1 * * *
csr.tram.api.emailIdToNotify=bwdashboard-csrs@bandwidth.com

# properties for search worker.
search.maxQuantityLimit=5000
search.minQuantityLimit=1
search.zipMinPercent=0
search.zipMinQuantity=0
search.disconnects.minQuantityLimit=1
search.disconnects.maxQuantityLimit=150
search.availableNpaNxxThresholdQty=1
search.emptyCriteriaErrorMessage=The search criteria '%s' cannot be empty.
search.invalidCriteriaLengthErrorMessage=The length of the search criteria '%s' is not valid, the acceptable length is %s characters.
search.criteriaNotParseableErrorMessage=The value specified for the search criteria '%s' cannot be parsed.
search.invalidRateCenterAbbrErrorMessage=The ratecenter abbreviation %s is not valid.
search.invalidStateErrorMessage=The state abbreviation %s is not valid.
search.invalidLataErrorMessage= The lata %s is not valid.
search.invalidBeginAreaCodeErrorMessage=The area code of telephone numbers cannot begin with 0,1 or 37 or 96.
search.invalidSecondDigitInAreaCodeErrorMessage=The area Code of telephone numbers can not have a 9 as the second digit.
search.invalidEndAreaCodeErrorMessage=The area code of telephone numbers can not end with 11.
search.invalidBeginNxxErrorMessage=The Nxx cannot begin with a 0 or 1.
search.shouldBeAlphanumericErrorMessage=%s should be alphanumeric.
search.invalidZipErrorMessage=The zip code  %s is not valid.
search.invalidCityErrorMessage=The city value %s is not valid.
search.specifyCriterionErrorMessage=Please also specify %s to search by current criteria.
search.systemErrorMessage=The system encountered an error while performing search, please retry.
search.invalidTollFreeWildCharPatternErrorMessage=Tollfree Wild Card search invalid format.
search.invalidSearchCriteriaCombinationMessage=The combination of search criteria is unsupported.
search.invalidLocalVanityErrorMessage=The localVanity value %s is invalid.
search.genericSystemErrorMessage=Sorry, the search request could not be processed because a system error occurred; please retry your operation or contact inetwork support person.
search.localVanityErrorMessage=The localVanity value should contain 3 or more digits
search.shouldBeAlphanumericErrorMessageOrGlob=%s should contain only alphanumerics or glob wildcards(*,?).
search.rabbitmq.message.ttl.ms=#{${rabbitmq.response.timeout.sec}*1000}
search.typeahead.npa.min.length=2
search.typeahead.npa.results.limit=10
search.typeahead.npanxx.min.length=5
search.typeahead.npanxx.results.limit=10
search.typeahead.npanxxblock.min.length=6
search.typeahead.npanxxblock.results.limit=10
search.typeahead.lata.min.length=2
search.typeahead.lata.results.limit=10
search.typeahead.zipcode.min.length=2
search.typeahead.zipcode.results.limit=10
search.typeahead.ratecenter.min.length=2
search.typeahead.ratecenter.results.limit=40
search.typeahead.city.min.length=2
search.typeahead.city.results.limit=40
search.typeahead.state.min.length=1
search.typeahead.state.results.limit=5
search.typeahead.api.cache-control.max.age=120
search.typeahead.sku.min.length=1

# properties for CoveredRateCenters cache
coveredratecenters.cache.timeout.minutes=10
coveredratecenters.cache.maximum.weight=100000

# properties common for Number management services.
nmw.tollFreeTierValue=100
nmw.invalidQuantityErrorMessage=The quantity specified %s is invalid.
nmw.invalidTierErrorMessage=The account does not contain any tier information, therefore the search or order operation is not permitted; please contact inetwork support person to resolve this issue.
nmw.inventoryHoldingAccountId=753

aging.reclamation.default.inservice.days.threshold=0
# if TN has been inservice shorter than the above threshold compare the days a number has aged against this value
aging.reclamation.default.long.inservice.aging.days=${aging.reclamation.default.short.inservice.aging.days}

retry.billing.maxCount=${retry.maxCount}
retry.e911.maxCount=${retry.maxCount}
retry.networkprovisioning.maxCount=${retry.maxCount}
retry.lnp.maxCount=${retry.maxCount}
retry.notification.maxCount=${retry.maxCount}

email.noreply=noreply@inetwork.com
email.dlSupport=listingcentralsupport@bandwidth.com
email.portOutSupport=inetworkdashdevteam@bandwidth.com
email.lidbSupport=tnssupport@bandwidth.com

# properties for network provisioning worker
networkprovisioning.maxTnsToApply=5000
networkprovisioning.maxIPAddressesToApply=5000
networkprovisioning.bandwidth.911.profile.name=Bandwidth911Profile

### BatchWorker properties
## short cron expression manual:
## Seconds Minutes Hours DayOfMonth Month DayOfWeek (Year optional)
## example: */5 * 08-17 * * 1-5 -> run this: every 5 seconds during business hours every business day
## GMT is 5h ahead (DST notwithstanding)
## MariaDB is backed up at 4:00AM UTC every day. Schedule long running cron jobs at least an hour later.
## https://crontab.cronhub.io/
taskscheduler.thread.count = 10
cron.bdr.archive.cleanup = 0 0 0 * * *
cron.portOut.wireline.immediate = 0 */1 * * * *
cron.reservationTimeout= 0 */10 * * * *
#11:00 for each cron job is to include 9:55 - 10:00:XX iteration block
#starting on the 25th second of the minute every 5 minutes for hours from 5:00 AM ET
# to 11:00 PM ET on weekdays ET
cron.trigger.ondemand.portin.auto.activation=25 */5 10,11,12,13,14,15,16,17,18,19,20,21,22,23,0,1,2,3 * * 1-6
#starting on the 35th second of the minute every 5 minutes for hours from 5:00 AM ET
# to 11:00 PM ET on weekdays ET
cron.trigger.manual.portin.auto.activation=35 */5 10,11,12,13,14,15,16,17,18,19,20,21,22,23,0,1,2,3 * * 1-6
cron.deadletter.redelivery=0 * * * * *
cron.lsr.check.tn.activation=0 0 */1 * * *
cron.reporting.archive.autoDownload=0 0/5 * * * ?
cron.reporting.instance.cleanup=0 0 0 * * *
cron.check.pending.cancellation.external.portins= 0 0 12 * * *
cron.submit.batch.system.event=0 */15 * * * *
cron.backoffice.errors.system.event=0 */15 * * * *
cron.notification.callback.timeout=0 0 * * * *
cron.notification.password.expiration.10.days=0 0 9 * * *
cron.notification.password.expiration.5.days=0 0 9 * * *
cron.notification.password.expiration.today=0 0 9 * * *
# run cleanup for nnid_provisioning_details every SAT at 8AM
cron.nnid.provisioning.cleanup=0 0 8 * * SAT
# run order archiver every nightly at 1am GMT (three hours before backups occur)
cron.order.archive=0 0 1 * * *
# run billing audit every day at 7:00 UTC
cron.billing.audit = 0 0 7 * * *
billing.old.data.cleanup.month=3
billing.control.point.aggregation.day.of.month = 1
# run draft portin clean up every day at 9:00 UTC (which is 5AM or 4AM EST)
cron.portin.draft.cleanup=0 0 9 * * *
cron.portin.draft.cleanup.hours=48
# run portin notification every day is at 8:00 UTC
cron.portin.proactive.notification=0 0 8 * * *
cron.portin.proactive.notification.hours=72
cron.sms.transient.nnid.cleanup.days = 2
# every day at 1 AM
cron.sms.transient.nnid.cleanup =  0 0 1 ? * *
local.osr.request.limit = 5000
# clean up order cache every minute
cron.orders.cache.cleanup = 0 */1 * * * *
# clean up users cache every hour
cron.users.cache.cleanup = 0 0 */1 * * *
# clean up deadletter table on the 1st of every month
cron.deadletter.cleanup = 0 0 0 1 * ?

# Profile names and ids used for unallocated TNs
unallocatedTN.accountProfileName.tollfree=UnallocatedTF
unallocatedTN.accountProfileId.tollfree=500009
unallocatedTN.accountProfileName.nontollfree=UnallocatedNonTF
unallocatedTN.accountProfileId.nontollfree=500013
unallocatedTN.elementProfileName=default
unallocatedTN.gatewayProfileName.tollfree=UnallocatedTF
unallocatedTN.gatewayProfileId.tollfree=500007
unallocatedTN.gatewayProfileName.nontollfree=UnallocatedNonTF
unallocatedTN.gatewayProfileId.nontollfree=500012

account.DthRange=5

termination.customerTraffic.default=DOMESTIC
termination.concurrentCalls.default=300
termination.callsPerSecond.default=15

# Billing Report settings
billing.report.base.dir = /usr/local/nms/bdr
billing.report.bdr.dir = ${billing.report.base.dir}/bdrs/
billing.report.cdr.dir = ${billing.report.base.dir}/cdrs/
billing.report.archive.dir = ${billing.report.base.dir}/bdrarchives
billing.report.archive.placeholder.file.extension = lock
billing.report.archive.file.extension = zip
billing.report.archive.cleanup.ttl.hours = 48
billing.report.archive.creation.thread.count = 5
q2c.billing.report.bdr.dir = ${billing.report.base.dir}/AccountDataQ2C

# Connection Manager
http.connection.count=200
http.connection.idle.timeout.sec=30

# E911 (EVS) Services common configs
e911.http.connection.timeout.ms=15000
e911.http.socket.timeout.ms=30000

# E911 Provisioning
e911.provisioning.timeout = 60000
e911.evs.uctrunking.accountId=20690

sippeer.defaultSmsHostPort=2775
sippeer.defaultVoiceHostPort=5060
sippeer.defaultTermHostPort=0

# WebUi
web.ui.token.orderdetail=orderdetail
web.ui.cookies.path=/
web.ui.beta.portal.name=/beta
web.ui.zopim.chat.enabled=false

# Pagination
pagination.default.size=500
pagination.default.page=1
pagination.minsize=1
sippeer.tns.pagination.default.size=50000

# POT settings
pot.api.portout.path=${pot.api.basepath}/portouts
pot.api.protocol=http

# Bandwidth Dashboard
exported.files.extension=xls
exported.files.extension.new=csv

bdr.download.attempts=600

export.numbers.to.file.limit=10000000

# Term Provisioning API
transaction.timeout=10

tollfree.carrier.spid=TF01
tollfree.vendor.name=Toll free vendor

reporting.api.enabled=true
reporting.api.verifyReportUri=true
reporting.reportInstance.softDelete=false
reporting.reportInstance.archiveFileDelete=true
reporting.reportInstance.archiveFolderDelete=true
reporting.jasper.protocol=http
reporting.jasper.baseApiPath=/jasperserver
reporting.jasper.timeout.connect=3000
reporting.jasper.timeout.read=15000

reporting.archive.basePath=/usr/local/nms/reporting
reporting.archive.jasperOutputPath=${reporting.archive.basePath}/jasperOutput
reporting.archive.disableJasperOutputRetrievalFromWebApp=false
reporting.archive.autoDownloadWaitForDownloadMs=5000
reporting.archive.autoDownloadPauseAfterDownloadMs=500

# CORS (Cross-origin resource sharing) settings
cors.accessControlAllowHeaders=x-requested-with, content-type, converter-type, x-csrf-token, x-realm, authorization
cors.accessControlExposeHeaders=Location, x-csrf-token, set-cookie, content-length

# User management
ldap.enable=true
ldap.permissions.synchronize.enable=true
ldap.roles.synchronize.enable=true
iris.db.population.api.permissions.enable=true
ldap.domain.name=dashboard
ldap.query.timeout.ms=20000
search.users.index.file=/tmp/iris/index/users
search.accounts.index.file=/tmp/iris/index/accounts
search.users.index.enable=true
search.accounts.index.enable=true
users.validation.maxValidationAttempts=3
#24hours = 86400seconds
users.validation.keyLivingTime.sec=86400
ldap.user.deletion.backup.folder=/var/log/nms/ldap-deleted-users/
ldap.users.index.size=25000
ldap.accounts.index.size=15000

bandwidth.auth.bearer.enabled=true

external.tns.vendor.name=External TN Vendor

maintenance.file.path=/usr/local/nms/maintenance

# Backoffice API
backoffice.api.max.retry.count=6

# Backoffice product quantity report
backoffice.product.quantity.batch.size=1000
backoffice.product.quantity.max.retry.count=5
backoffice.product.quantity.retry.interval=30000

# Tn integrity
tn.lower.line=2012000000
tn.upper.line=9899999999
integrity.audit.min.chunk.size=50000
integrity.audit.max.chunk.size=4000000
integrity.audit.npac.thread.count=8

# Audit data sources (MyBWC)
datasource.mybwc.connections.max=50
datasource.mybwc.connections.test.period.sec=30

# Audit data sources (NPAC or LRN)
datasource.npac.connections.max=50
datasource.npac.connections.test.period.sec=30

tnassignment.record.ttl.days=120

# Amazon route 53
dns.record.ttl=300
dns.record.data.srv.priority=5
dns.record.data.srv.weight=50
dns.record.data.srv.udp.prefix=_sip._udp.

# SBC
sbc.api.http.connection.timeout.ms=15000
sbc.api.http.socket.timeout.ms=30000
sbc.address.context=default
sbc.sip.sig.port.ip.interface.group=CUST_SIGNALING
sbc.zone.dns.group=DNS
sbc.zone.port.id.range.lower.bound=1
sbc.zone.port.id.range.upper.bound=4096
sbc.udp.port.number.range.lower.bound=5000
sbc.udp.port.number.range.upper.bound=6000
sbc.list.max.size=32

# Billing Telephone Number History
billing.tn.history.max.retry.count=6
billing.tn.history.retry.initial.interval=30000
billing.tn.history.retry.interval.multiplier=2
rest.history.retain.days=180

# TN flows metrics
tnflows.metrics4j.metrics_id=number_management_tn_flows

# API usage metrics
apiusage.metrics4j.metrics_id=iris_api_usage

# Porting and Order Request Cleanup
porting.cleanup.warning.days=87
porting.cleanup.cancel.days=90
portout.cleanup.nonterminal.cancel.days=14
porting.cleanup.request.throttle.limit=300
order.cleanup.cancel.days=90
order.cleanup.notification.email=codeadmin@bandwidth.com

# Order archive
order.archive.batch.size=1000
order.archive.duration.minutes=120
order.archive.retention.days=1095
order.archive.throttle.milliseconds=1000
order.archive.target.database.name=iris_history

networkProvisioningService.api.timeout.ms=150000

application.api.timeout=12000

# Catapult integration
cac.limits.minCps=1
cac.limits.maxCps=200
cac.limits.minConcurrentCalls=1
cac.limits.maxConcurrentCalls=40000
com.bandwidth.appservice.client.userAgent=Iris

# TogglzConfiguration
togglz.featureAdminAuthority=ROLE_ADMIN+UPDATE
togglz.slack.api.bot.icon=pizza
togglz.slack.api.bot.name=iris-togglz-bot
togglz.slack.api.message_format=$stateIcon *$feature* was $changed by $user $link
togglz.slack.web.bot.name=togglz-web-bot
togglz.slack.web.message_format=$stateIcon *$feature* was $changed by $user $link

net.number.api.protocol=http
net.number.api.provisioning.id=bandwidth
net.number.min.batch.size=2
net.number.max.batch.size=5000

nnid.provisioning.success.retain.days=90

# Every day at 1 AM
cron.tnoption.order.expiration= 0 0 1 ? * *
net.number.osr.maxCount=1000
tnoption.order.net.number.expire.time=7200

pss.request.limit.per.minute=15

# properties for batch account migration for core2
migrationControl.maxBatchSize=5000

increased.api.timeout.secs=300

notification.basicSpam.percentMatchIn=0.9
notification.basicSpam.spamIfMoreThanIn=10
notification.basicSpam.spamIfBeforeIn=30
notification.basicSpam.spamIfBeforeTimeUnitIn=SECONDS
notification.basicSpam.spamEmailTypeIn=MESSAGE

notification.whitelistSpam.percentMatchIn=1.0
notification.whitelistSpam.spamIfMoreThanIn=2
notification.whitelistSpam.spamIfBeforeIn=30
notification.whitelistSpam.spamIfBeforeTimeUnitIn=MINUTES
notification.whitelistSpam.spamEmailTypeIn=SUBJECT

#120000=2minutes
notification.orderupdate.email.imap.timeout=120000
#by default: userFlag=spring-integration-mail-adapter
notification.orderupdate.email.imap.useflag=iris-integration-mail-adapter

imap.socketfactory=javax.net.ssl.SSLSocketFactory
imap.protocol=imaps
imap.debug=false
mail.smtp.auth=true
mail.smtp.starttls.enable=true
mail.imap.socketFactory.fallback=false
callback.blacklisted.hosts=127.0.0.0/8,localhost
mail.imap.peek=false
mail.imaps.peek=false
password.expiration.core.pool.size=4
password.expiration.lifetime.days=90
password.expiration.grace.period.days=10
password.expiration.time.update.delay.seconds=5
password.expiration.apiuser.date=2050-01-01 00:00:00

newnumber.datadog.application=iris

# Maximum number of toll free resporg Ids
tollfree.maxtollfreeresporgids=500

profile.element.max.retry.count=15
profile.element.retry.base.expression=10
profile.element.retry.base.multiplier.expression=1.5

# 8MS
8ms.checker.numbers.max=5000
8ms.polling.timeout.ms=30000
8ms.request.polling.interval=0 */1 * * * *

# Campaign Registry
campaign.registry.brands.max.page.size=8